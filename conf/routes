# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page - we use the @controllers syntax here so that the router knows we are referring to a class. In turn it
# will call on the GlobalSettings.getController method to resolve the actual controller instance.
# GET     /                           @controllers.Application.index

# Climate Service
GET           /climateService/getClimateService/:name/json                                              @controllers.ClimateServiceController.getClimateService(name: String, format: String="json")
GET           /climateService/getClimateService/id/:id                                                  @controllers.ClimateServiceController.getClimateServiceById(id: Long)
GET           /climateService/getAllClimateServices/json                                                @controllers.ClimateServiceController.getAllClimateServices(format: String="json")
GET           /climateService/getAllJournalPublications/json                                            @controllers.ClimateServiceController.getAllJournalPublications(format: String="json")
GET           /climateService/getAllMostRecentClimateServicesByCreateTime/json                          @controllers.ClimateServiceController.getAllClimateServicesOrderByCreateTime(format: String="json")
GET           /climateService/getAllMostRecentClimateServicesByLatestAccessTime/json                    @controllers.ClimateServiceController.getAllClimateServicesOrderByLatestAccessTime(format: String="json")

GET           /climateService/getAllPublications/json                                                   @controllers.PublicationController.getAllPublications(format: String="json")
GET			  /climateService/getAllPublicationsByTopicId/:id											@controllers.PublicationController.getAllPublicationsByTopicId(id: Long, format: String="json")
GET			  /climateService/getAllPublicationTopics/json              								@controllers.PublicationController.getAllPublicationTopics(format: String="json")
GET			  /climateService/getAllPublicationTopicKeywordsByPublicationId/:id							@controllers.PublicationController.getAllPublicationTopicKeywordsByPublicationId(id: Long, format: String="json")
GET			  /climateService/getTopicByPublicationId/:id												@controllers.PublicationController.getPublicationTopicByPublicationId(id: Long, format: String="json")

GET			  /climateService/getAllPublicationTopicKeywords/json              							@controllers.PublicationController.getAllPublicationTopicKeywords(format: String="json")
GET           /climateService/getPublicationMetadataByPublicationId/:id                                 @controllers.PublicationController.getPublicationMetadataByPublicationId(id: Long, format: String="json")
GET           /climateService/getPublicationPanelByPublicationId/:id                                    @controllers.PublicationController.getPublicationPanelByPublicationId(id: Long, format: String="json")
GET           /climateService/getAllMostRecentPublicationsByLatestAccessTime/json                    	@controllers.PublicationController.getAllPublicationsOrderByLatestAccessTime(format: String="json")
GET           /climateService/getAllMostRecentPublicationsByCreateTime/json                    			@controllers.PublicationController.getAllPublicationsOrderByCreateTime(format: String="json")
GET           /climateService/getAllMostUsedPublications/json                    						@controllers.PublicationController.getAllPublicationsOrderByCount(format: String="json")
POST          /climateService/addAPublication                                                           @controllers.PublicationController.addAPublication
GET 		  /climateService/addAuthor/:name															@controllers.PublicationController.addAuthor(name: String, format: String="json")
GET			  /climateService/getAllAuthors/json														@controllers.PublicationController.getAllAuthors(format: String="json")


GET           /climateService/getAllMostUsedClimateServices/json                                        @controllers.ClimateServiceController.getAllClimateServicesOrderByCount(format: String="json")
GET			  /climateService/getTopKUsedClimateServicesByDatasetId/:id									@controllers.ClimateServiceController.getTopKUsedClimateServicesByDatasetId(id: Long, format: String="json")
POST          /climateService/addClimateService                                                         @controllers.ClimateServiceController.addClimateService
POST		  /climateService/queryClimateService														@controllers.ClimateServiceController.queryClimateServices
POST		  /publication/queryPublication														@controllers.PublicationController.queryPublications

GET           /climateService/getAllServiceEntries/json                                                 @controllers.ClimateServiceController.getAllServiceEntries(format: String="json")
POST          /climateService/addServiceEntry                                                           @controllers.ClimateServiceController.addServiceEntry
PUT           /climateService/updateClimateService/id/:id                                               @controllers.ClimateServiceController.updateClimateServiceById(id: Long)
PUT           /climateService/updateClimateService/name/:oldName                                        @controllers.ClimateServiceController.updateClimateServiceByName(oldName: String)
DELETE        /climateService/deleteClimateService/id/:id                                               @controllers.ClimateServiceController.deleteClimateServiceById(id: Long)
DELETE        /climateService/deleteClimateService/name/:name                                           @controllers.ClimateServiceController.deleteClimateServiceByName(name: String)

# Save Climate Service Page
POST          /climateService/savePage                                                         			@controllers.ClimateServiceController.savePage

# Bug Report
GET           /bugReport/getBugReport/id/:id                                                            @controllers.BugReportController.getBugReport(id: Long, format: String="json")
GET           /bugReport/getAllBugReports/json                                                          @controllers.BugReportController.getAllBugReports
GET           /bugReport/getAllUnsolvedBugReports/json                                                  @controllers.BugReportController.getAllUnsolvedBugReports
GET           /bugReport/getAllSolvedBugReports/json                                                    @controllers.BugReportController.getAllSolvedBugReports
POST          /bugReport/addBugReport                                                                   @controllers.BugReportController.addBugReport
PUT           /bugReport/updateBugReport/id/:id                                                         @controllers.BugReportController.updateBugReportById(id: Long)
DELETE        /bugReport/deleteBugReport/id/:id                                                         @controllers.BugReportController.deleteBugReport(id: Long)

# ClimateServiceComment
GET       	  /climateServiceComment/getComment/:id/:email/json			            								@controllers.ClimateServiceCommentController.getComment(id: Long, email: String, format: String="json")
GET       	  /climateServiceComment/searchCommentByHashTag/:hashTag	           										@controllers.ClimateServiceCommentController.searchCommentByHashTag(hashTag: String)
GET	  		  /climateServiceComment/getMentions/:email				    											@controllers.ClimateServiceCommentController.getMentions(email: String)
POST  	  	  /climateServiceComment/postComment					    												@controllers.ClimateServiceCommentController.postComment
PUT  	  	  /climateServiceComment/editComment					    												@controllers.ClimateServiceCommentController.editComment
DELETE    	  /climateServiceComment/deleteComment/:service_id/:comment_id	    									@controllers.ClimateServiceCommentController.deleteComment(service_id: Long, comment_id: Long)

# Service Configuration
GET           /serviceConfiguration/getServiceConfiguration/id/:id/json                                 @controllers.ServiceConfigurationController.getServiceConfiguration(id: Long, format: String="json")
POST          /serviceConfiguration/addServiceConfiguration                                             @controllers.ServiceConfigurationController.addServiceConfiguration
PUT           /serviceConfiguration/updateServiceConfiguration/id/:id                                   @controllers.ServiceConfigurationController.updateServiceConfigurationById(id: Long)
DELETE        /serviceConfiguration/deleteServiceConfiguration/:id                                      @controllers.ServiceConfigurationController.deleteServiceConfiguration(id: Long)
GET           /serviceConfiguration/getAllServiceConfigurationsByUserId/:userId/json                    @controllers.ServiceConfigurationController.getServiceConfigurationsByUser(userId: Long, format: String="json")

# Service Configuration Item
GET           /serviceConfigurationItem/serviceConfigurationItemById/:id                                @controllers.ServiceConfigurationItemController.getServiceConfigurationItemById(id: Long)
GET           /serviceConfigurationItem/serviceConfigurationItemByServiceConfig/:serviceConfigId        @controllers.ServiceConfigurationItemController.getServiceConfigurationItemsInServiceConfig(serviceConfigId: Long)
GET           /serviceConfigurationItem/serviceConfigurationItemByParamId/:paramId                      @controllers.ServiceConfigurationItemController.getServiceConfigurationItemByParameterId(paramId : Long)
POST          /serviceConfigurationItem/addServiceConfigurationItem                                     @controllers.ServiceConfigurationItemController.addServiceConfigurationItem
PUT           /serviceConfigurationItem/updateServiceConfigurationItem/id/:id                           @controllers.ServiceConfigurationItemController.updateServiceConfigurationItemById(id:Long)
DELETE        /serviceConfigurationItem/deleteServiceConfigurationItemById/:id                          @controllers.ServiceConfigurationItemController.deleteServiceConfigurationItemById(id: Long)

# Service Execution Log
GET           /serviceExecutionLog/getAllServiceExecutionLog                                            @controllers.ServiceExecutionLogController.getAllServiceExecutionLogs(format: String="json")
GET           /serviceExecutionLog/getServiceExecutionLog/:id                                           @controllers.ServiceExecutionLogController.getServiceExecutionLog(id: Long, format: String="json")
POST          /serviceExecutionLog/addServiceExecutionLog                                               @controllers.ServiceExecutionLogController.addServiceExecutionLog()
POST		  /serviceExecutionLog/queryExecutionLogsByUser												@controllers.ServiceExecutionLogController.queryExecutionLogsByUser()
POST          /serviceExecutionLog/queryServiceExecutionLogs                                          @controllers.ServiceExecutionLogController.queryServiceExecutionLogs()
PUT           /serviceExecutionLog/updateServiceExecutionLogs/:id                                       @controllers.ServiceExecutionLogController.updateServiceExecutionLog(id: Long)
DELETE        /serviceExecutionLog/deleteServiceExecutionLogs/:id                                       @controllers.ServiceExecutionLogController.deleteServiceExecutionLog(id: Long)
# Temp: replace service log
#GET          /serviceExecutionLog/replaceUser                                                          @controllers.ServiceExecutionLogController.replaceUserWithPurpose()

# DatasetLog
GET           /datasetLog/getAllDatasetLogs/json                                                        @controllers.DatasetLogController.getAllDatasetLogs(format: String="json")
GET           /datasetLog/getDatasetLog/id/:id/json                                                     @controllers.DatasetLogController.getDatasetLog(id: Long, format: String="json")
GET           /datasetLog/getServiceExecutionLogsByDatasetAndUser/datasetId/:datasetId/userId/:userId/json                  @controllers.DatasetLogController.getServiceExecutionLogsByDatasetAndUser(userId: Long, datasetId:Long, format: String="json")
GET           /datasetLog/getDatasetLogsByServiceAndUser/serviceId/:serviceId/userId/:userId/json                  			@controllers.DatasetLogController.getDatasetLogsByServiceAndUser(userId: Long, serviceId:Long, format: String="json")
GET           /datasetLog/getUsersByServiceAndDataset/serviceId/:serviceId/datasetId/:datasetId/json                  		@controllers.DatasetLogController.getUsersByServiceAndDataset(serviceId: Long, datasetId:Long, format: String="json")
POST          /datasetLog/addDatasetLog                                                                 @controllers.DatasetLogController.addDatasetLog
POST		  /datasetLog/queryDatasets																	@controllers.DatasetLogController.queryDatasets
POST		  /datasetLog/queryVariables																@controllers.DatasetLogController.queryVariables
PUT           /datasetLog/updateDatasetLog/id/:id                                                       @controllers.DatasetLogController.updateDatasetLogById(id: Long)
DELETE        /datasetLog/deleteDatasetLog/id/:id                                                       @controllers.DatasetLogController.deleteDatasetLog(id: Long)

# Dataset/User/Service 
GET			  /datasetAndUser/getDatasetsByUserAndUser/userId1/:id1/userId2/:id2/json 					@controllers.DatasetAndServiceAndUserController.getAllDatasetsByUsers(id1: Long, id2: Long, format: String="json")
GET           /userAndDataset/getUserByDatasetAndDataset/datasetId1/:id1/datasetId2/:id2/json           @controllers.DatasetAndServiceAndUserController.getAllUsersByDatasets(id1: Long, id2: Long, format: String="json")
GET			  /serviceAndUser/getServicesByUserAndUser/userId1/:id1/userId2/:id2/json 					@controllers.DatasetAndServiceAndUserController.getAllServicesByUsers(id1: Long, id2: Long, format: String="json")
GET			  /datasetAndService/getServicesByDatasetAndDataset/datasetId1/:id1/datasetId2/:id2/json   @controllers.DatasetAndServiceAndUserController.getAllServicesByDatasets(id1: Long, id2: Long, format: String="json")
GET 		  /serviceAndUser/getUserByServiceAndService/serviceId1/:id1/serviceId2/:id2/json				@controllers.DatasetAndServiceAndUserController.getAllUsersByServices(id1: Long, id2: Long, format: String="json")
GET 		  /datasetAndService/getDatasetByServiceAndService/serviceId1/:id1/serviceId2/:id2/json	    @controllers.DatasetAndServiceAndUserController.getAllDatasetsByServices(id1: Long, id2: Long, format: String="json")

# Workflow
#GET           /workflow/getAllWorkflows/json                                                          	@controllers.WorkflowController.getAllWorkflows(format: String="json")
#GET           /workflow/getWorkflowById/id/:id/json                                                     @controllers.WorkflowController.getWorkflowById(id: Long, format: String="json")
#POST          /workflow/addWorkflow                                                                   	@controllers.WorkflowController.addWorkflow
#PUT           /workflow/updateWorkflowById/id/:id                                                       @controllers.WorkflowController.updateWorkflowById(id: Long)
#DELETE        /workflow/deleteWorkflowById/id/:id/                                                     	@controllers.WorkflowController.deleteWorkflowById(id:Long)
#POST          /workflow/generateWorkflowJson                                                            @controllers.WorkflowController.generateWorkflowJson

# Instrument
GET           /instrument/getAllInstruments/json                                                        @controllers.InstrumentController.getAllInstruments(format: String="json")
GET           /instrument/getInstrument/id/:id/json                                                     @controllers.InstrumentController.getInstrument(id: Long, format: String="json")
POST          /instrument/addInstrument                                                                 @controllers.InstrumentController.addInstrument
PUT           /instrument/updateInstrument/id/:id                                                       @controllers.InstrumentController.updateInstrumentById(id: Long)
DELETE        /instrument/deleteInstrument/id/:id                                                       @controllers.InstrumentController.deleteInstrument(id: Long)

# Dataset
GET           /dataset/getAllDatasets/json                                                              @controllers.DatasetController.getAllDatasets(format: String="json")
GET           /dataset/getDataset/id/:id/json                                                           @controllers.DatasetController.getDataset(id: Long, format: String="json")
POST          /dataset/addDataset                                                                       @controllers.DatasetController.addDataset
PUT           /dataset/updateDataset/id/:id                                                             @controllers.DatasetController.updateDatasetById(id: Long)
DELETE        /dataset/deleteDataset/id/:id                                                             @controllers.DatasetController.deleteDataset(id: Long)
POST		  /dataset/queryDataset																		@controllers.DatasetController.queryDatasets
POST		  /dataset/getMostKPopularDatasets															@controllers.DatasetController.getMostKPopularDatasets

# Parameter
GET           /parameter/getAllParameters/json                                                          @controllers.ParameterController.getAllParameters(format: String="json")
GET           /parameter/getParameter/service/:id/name/:name/json                                       @controllers.ParameterController.getParameterByName(id:Long, name: String, format: String="json")
GET           /parameter/getParameter/id/:id/json                                                       @controllers.ParameterController.getParameterById(id: Long, format: String="json")
POST          /parameter/addParameter                                                                   @controllers.ParameterController.addParameter
PUT           /parameter/updateParameter/id/:id                                                         @controllers.ParameterController.updateParameterById(id: Long)
PUT           /parameter/updateParameter/name/:oldName                                                  @controllers.ParameterController.updateParameterByName(oldName: String)
DELETE        /parameter/deleteParameter/service/:id/name/:name                                         @controllers.ParameterController.deleteParameterByName(id:Long, name: String)

# JournalPublication
GET           /journalPublication/getAllJournalPublications/json                                        @controllers.JournalPublicationController.getAllJournalPublications(format: String="json")
GET           /journalPublication/getJournalPublication/id/:id/json                                     @controllers.JournalPublicationController.getJournalPublicationById(id: Long, format: String="json")
POST          /journalPublication/addJournalPublication                                                 @controllers.JournalPublicationController.addJournalPublication
PUT           /journalPublication/updateJournalPublication/id/:id                                       @controllers.JournalPublicationController.updateJournalPublicationById(id: Long)
DELETE        /journalPublication/deleteJournalPublication/id/:id                                       @controllers.JournalPublicationController.deleteJournalPublicationById(id: Long)

# BookPublication
GET           /BookPublication/getAllBookPublications/json                                              @controllers.BookPublicationController.getAllBookPublications(format: String="json")
GET           /BookPublication/getBookPublication/id/:id/json                                           @controllers.BookPublicationController.getBookPublicationById(id: Long, format: String="json")
POST          /BookPublication/addBookPublication                                                       @controllers.BookPublicationController.addBookPublication
PUT           /BookPublication/updateBookPublication/id/:id                                             @controllers.BookPublicationController.updateBookPublicationById(id: Long)
DELETE        /BookPublication/deleteBookPublication/id/:id                                             @controllers.BookPublicationController.deleteBookPublicationById(id: Long)

# BookChapterPublication
GET           /BookChapterPublication/getAllBookPublications/json                                       @controllers.BookChapterPublicationController.getAllBookChapterPublications(format: String="json")
GET           /BookChapterPublication/getBookPublication/id/:id/json                                    @controllers.BookChapterPublicationController.getBookChapterPublication(id: Long, format: String="json")
POST          /BookChapterPublication/addBookPublication                                                @controllers.BookChapterPublicationController.addBookChapterPublication
PUT           /BookChapterPublication/updateBookPublication/id/:id                                      @controllers.BookChapterPublicationController.updateBookChapterPublication(id: Long)
DELETE        /BookChapterPublication/deleteBookPublication/id/:id                                      @controllers.BookChapterPublicationController.deleteBookChapterPublication(id: Long)

# ConferencePublication
GET           /ConferencePublication/getAllBookPublications/json                                        @controllers.ConferencePublicationController.getAllConferencePublications(format: String="json")
GET           /ConferencePublication/getBookPublication/id/:id/json                                     @controllers.ConferencePublicationController.getConferencePublication(id: Long, format: String="json")
POST          /ConferencePublication/addBookPublication                                                 @controllers.ConferencePublicationController.addConferencePublication
PUT           /ConferencePublication/updateBookPublication/id/:id                                       @controllers.ConferencePublicationController.updateConferencePublication(id: Long)
DELETE        /ConferencePublication/deleteBookPublication/id/:id                                       @controllers.ConferencePublicationController.deleteConferencePublication(id: Long)

# Users
#GET           /users/:id                                                                                @controllers.UserController.getUser(id: Long, format: String="json")
#POST          /users/add                                                                                @controllers.UserController.addUser
#PUT           /users/update/:id                                                                         @controllers.UserController.updateUser(id: Long)
#DELETE        /users/delete/:id                                                                         @controllers.UserController.deleteUser(id: Long)
#GET		  /users/getAllUsers/json																	@controllers.UserController.getAllUsers(format: String="json")
#POST		  /users/isUserValid																		@controllers.UserController.isUserValid
#POST		  /users/isEmailExisted																		@controllers.UserController.isEmailExisted
POST		  /users/getUserByEmail																		@controllers.UserController.getUserByEmail
#DELETE		  /users/delete/userName/:userName/password/:password										@controllers.UserController.deleteUserByUserNameandPassword(userName: String, password: String)

# Analytics
#GET		  /analytics/getAllDatasetAndUserWithCount/json											    @controllers.AnalyticsController.getAllDatasetAndUserWithCount(format: String="json")
#GET		  /analytics/getAllServiceAndUserWithCount/json											    @controllers.AnalyticsController.getAllServiceAndUserWithCount(format: String="json")
#GET		  /analytics/getAllServiceAndDatasetWithCount/json											@controllers.AnalyticsController.getAllServiceAndDatasetWithCount(format: String="json")
GET			  /analytics/getOneUserWithAllDatasetAndCountByUserId/:id/json								@controllers.AnalyticsController.getOneUserWithAllDatasetAndCount(id: Long, format: String="json")
GET			  /analytics/getOneDatasetWithAllUserAndCountByDatasetId/:id/json							@controllers.AnalyticsController.getOneDatasetWithAllUserAndCount(id: Long, format: String="json")
GET			  /analytics/getOneUserWithAllServiceAndCountByUserId/:id/json								@controllers.AnalyticsController.getOneUserWithAllServiceAndCount(id: Long, format: String="json")
GET			  /analytics/getOneServiceWithAllUserAndCountByServiceId/:id/json							@controllers.AnalyticsController.getOneServiceWithAllUserAndCount(id: Long, format: String="json")
GET			  /analytics/getOneServiceWithAllDatasetAndCountByServiceId/:id/json						@controllers.AnalyticsController.getOneServiceWithAllDatasetAndCount(id: Long, format: String="json")
GET			  /analytics/getOneDatasetWithAllServiceAndCountByDatasetId/:id/json						@controllers.AnalyticsController.getOneDatasetWithAllServiceAndCount(id: Long, format: String="json")
POST		  /analytics/getRelationalKnowledgeGraph/json												@controllers.AnalyticsController.getRelationalKnowledgeGraph(format: String="json")

# Util
POST		  /util/uploadPicture																		@controllers.UtilController.uploadPicture()
POST		  /util/addPicture																			@controllers.UtilController.addPicture()
GET			  /util/downloadPicture																		@controllers.UtilController.downloadPicture()

# Graph Algorithm
GET			  /graphAlgorithm/getShortestPath/source/:source/target/:target/json						@controllers.GraphAlgorithmController.getShortestPath(source: Integer, target: Integer, format: String="json")
GET			  /graphAlgorithm/getKthShortestPath/source/:source/target/:target/k/:k/json				@controllers.GraphAlgorithmController.getKShortestPath(source: Integer, target: Integer, k:Integer, format: String="json")

# Recomendation Algorithm
GET			  /recommendation/getTopKSimilarUsersById/:id/k/:k/json										@controllers.UserRecommendationController.getKSimilarUsers(id: Long, k: Integer, format: String="json")

# Map static resources from the /public folder to the /assets URL path
GET           /assets/*file                                                                             controllers.Assets.at(path="/public", file)


#Merged from team 15&16
# Users
DELETE        /users/delete/:id                                                                          @controllers.UserController.deleteUser(id: Long)
GET			  /users/getAllUsers/json																	 @controllers.UserController.getAllUsers(format: String="json")
DELETE		  /users/delete/userName/:userName/password/:password										 @controllers.UserController.deleteUserByUserNameandPassword(userName: String, password: String)

POST          /users/register                                                                            @controllers.UserController.userRegister
POST          /users/login                                                                               @controllers.UserController.userLogin

GET           /users/search/:display_name/json                                                           @controllers.UserController.userSearch(display_name: String, format: String="json")

PUT           /users/setprofile/:id                                                                      @controllers.UserController.setProfile(id: Long)
GET           /users/getprofile/:id/json                                                                 @controllers.UserController.getProfile(id: Long, format: String="json")

GET           /users/follow/followerId/:followerId/followeeId/:followeeId                               @controllers.UserController.userFollow(followerId: Long, followeeId: Long)
GET           /users/unfollow/followerId/:followerId/followeeId/:followeeId                             @controllers.UserController.userUnfollow(followerId: Long, followeeId: Long)
GET           /users/getFollowers/:id                                                                   @controllers.UserController.getFollowers(id: Long)
GET           /users/getFollowees/:id                                                                   @controllers.UserController.getFollowees(id: Long)

GET           /users/sendFriendRequest/sender/:senderId/receiver/:receiverId                             @controllers.UserController.sendFriendRequest(senderId: Long, receiverId: Long)
GET           /users/getFriendRequests/userId/:userId                                                    @controllers.UserController.getFriendRequests(userId: Long)
GET           /users/acceptFriendRequest/userId/:userId/sender/:senderId                                 @controllers.UserController.acceptFriendRequest(userId: Long, senderId: Long)
GET           /users/rejectFriendRequest/userId/:userId/sender/:senderId                                 @controllers.UserController.rejectFriendRequest(userId: Long, senderId: Long)
GET           /users/getFriends/userId/:userId                                                           @controllers.UserController.getFriends(userId: Long)
GET           /users/deleteFriend/userId/:userId/friendId/:friendId                                      @controllers.UserController.deleteFriend(userId: Long, friendId: Long)


# Workflow
POST           /workflow/post                                                                            @controllers.WorkflowController.post
POST           /workflow/updateWorkflow                                                                  @controllers.WorkflowController.updateWorkflow
POST           /workflow/deleteWorkflow                                                                  @controllers.WorkflowController.deleteWorkflow
GET            /workflow/get/workflowID/:wfID/userID/:userID/json                                        @controllers.WorkflowController.get(wfID: Long, userID: Long, format: String="json")
GET           /workflow/getTimeline/:id/offset/:offset/json                                              @controllers.WorkflowController.getTimeLine(id: Long, offset: Long, format: String="json")
GET           /workflow/getWorkflowList/:id/json                                                         @controllers.WorkflowController.getWorkflowList(id: Long, format: String="json")
POST           /workflow/uploadImage/:id                                                                 @controllers.WorkflowController.uploadImage(id:Long)
GET           /workflow/getPublicWorkflow/json                                                           @controllers.WorkflowController.getPublicWorkflow(format: String="json")

GET            /workflow/getTags/workflowId/:wfId                                                        @controllers.WorkflowController.getTags(wfId: Long)
POST           /workflow/setTag                                                                          @controllers.WorkflowController.setTag
GET            /workflow/deleteTag/workflowId/:wfId/tag/:tag                                             @controllers.WorkflowController.deleteTag(wfId: Long, tag: String)
GET            /workflow/getByTag/tag/:tag                                                               @controllers.WorkflowController.getByTag(tag: String)
GET            /workflow/getByTitle/title/:title                                                         @controllers.WorkflowController.getByTitle(title: String)
GET            /workflow/getTop3WorkFlow                                                                 @controllers.WorkflowController.getTop3WorkFlow()

# Mail
POST           /mail/sendMail                                                                            @controllers.MailController.sendMail
GET            /mail/getMailDetail/mailId/:mailId                                                        @controllers.MailController.readMail(mailId: Long)
GET           /mail/getInbox/:id/json                                                                    @controllers.MailController.getInbox(id: Long, format: String="json")
GET           /mail/getOutbox/:id/json                                                                   @controllers.MailController.getOutbox(id: Long, format: String="json")

#Suggestion
POST          /suggestion/publishSuggestion                                                              @controllers.SuggestionsController.publishSuggestion
POST          /suggestion/addTag                                                                        @controllers.SuggestionsController.addTag
GET           /suggestion/voteToSuggestion/:suggestionId                                                @controllers.SuggestionsController.voteToSuggestion(suggestionId: Long)
GET           /suggestion/getSuggestionForWorkflow/:workflowId                                          @controllers.SuggestionsController.getSuggestionForWorkflow(workflowId: Long)

# Tag
#input:String tag
POST           /tag/createTag                                                                            @controllers.TagController.createTag
POST           /tag/deleteTag                                                                            @controllers.TagController.deleteTag


#Group
POST           /group/createGroup                                                                        @controllers.GroupUsersController.createGroup
POST           /group/addMembersToGroup                                                                  @controllers.GroupUsersController.addMembersToGroup
GET            /group/getGroupList/:userID/json                                                          @controllers.GroupUsersController.getGroupList(userID: Long, format: String="json")
GET            /group/getGroupMember/:groupId/json                                                       @controllers.GroupUsersController.getGroupMember(groupId: Long, format: String="json")

#Workflow
#GET            /workflow/getTimeline/:id/offset/:offset/json                                              @controllers.UserController.userSearch(id: Long, offset: Long, format: String="json")
